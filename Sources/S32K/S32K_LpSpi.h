/**************************************************************************************************
 * (C) 2020 Walvoil S.p.a.                                                                            *
 * All rights reserved.                                                                           *
 **************************************************************************************************/
/* @file S32K_flexSpi.h
 * Brief description
 */
#ifndef S32K_LP_SPI_H_
#define S32K_LP_SPI_H_

/**************************************************************************************************
 *  1.  INCLUDE FILES                                                                             *
 **************************************************************************************************/
#include "queue.h"
#include "S32K_ObjectConfig.h"
/**************************************************************************************************
 *  2.  PUBLIC DEFINES                                                                            *
 **************************************************************************************************/

/**************************************************************************************************
 *  3.  PUBLIC MACROS                                                                             *
 **************************************************************************************************/

/**************************************************************************************************
 *  4.  PUBLIC ENUMERATIONS                                                                       *
 **************************************************************************************************/
typedef enum
{
    S32K_LP_SPI_MASTER        = 0x00U,
    S32K_LP_SPI_SLAVE         = 0x01U,
} s_S32K_LpSpi_spimode_t;

typedef enum
{
    S32K_LP_SPI_ID_0        = 0x00U,
    S32K_LP_SPI_ID_1        = 0x01U,
    S32K_LP_SPI_ID_2        = 0x02U,
    S32K_LP_SPI_ID_3        = 0x03U,
} s_LpSpi_SpiId;
typedef enum
{
    S32K_LP_SPI_SAMPLE_RX_MSG        = 0x00U,
    S32K_LP_SPI_SAMPLE_TX_MSG        = 0x01U,
} s_LpSpi_Sample;

/**************************************************************************************************
 *  5.  PUBLIC STRUCTURES                                                                         *
 **************************************************************************************************/
//------------------------------------------------------------------------------
typedef struct s_LpSpi_msg_e
{
    uint8_t data[8u];
} s_LpSpi_msg_t;

/**************************************************************************************************
 *  6.  PUBLIC TYPES                                                                              *
 **************************************************************************************************/

	/**************************************************************************************************
 *  7.  EXPORTED (PUBLIC) VARIABLES                                                               *
 **************************************************************************************************/

/**************************************************************************************************
 *  8.  FUNCTION PROTOTYPES                                                                       *
 **************************************************************************************************/
extern wres_t S32K_LpSpi_SetTimeoutTxWait( s_LpSpi_SpiId ObjId, uint8_t TimeoutValue );
extern wres_t S32K_LpSpi_MasterSetDelay(s_LpSpi_SpiId ObjId,
										uint32_t delayBetwenTransfers,
										uint32_t delaySCKtoPCS,
										uint32_t delayPCStoSCK
		);
extern wres_t S32K_LpSpi_Init( 	s_LpSpi_SpiId ObjId,
								s_S32K_LpSpi_spimode_t SpiMode,
								uint32_t instanceNum,
								const lpspi_master_config_t *userMasterConfigPtr,
								const lpspi_slave_config_t *userSlaveConfigPtr
		);
extern wres_t S32K_LpSpi_TxRxSlave(s_LpSpi_SpiId ObjId);
extern wres_t S32K_LpSpi_GetRxMsgSlave(s_LpSpi_SpiId ObjId, void *msg );
extern wres_t S32K_LpSpi_TxRxMaster(s_LpSpi_SpiId ObjId, uint8_t *txBuffer, uint8_t *rxBuffer, s_S32K_SysPin_GPioID csID );

/**************************************************************************************************
 *  8.  FUNCTION CALL TUTORIAL
 **************************************************************************************************/

#endif /* S32K_LP_SPI_H_ */
/**************************************************************************************************
 *  EOF                                                                                           *
 **************************************************************************************************/
